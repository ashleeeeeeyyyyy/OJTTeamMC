
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Earl
 */
public class Registration extends javax.swing.JFrame {

    /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        adviserLabel = new javax.swing.JLabel();
        classCodeLabel = new javax.swing.JLabel();
        registerButton = new javax.swing.JButton();
        IDLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        instructions = new javax.swing.JButton();
        RegisterID = new javax.swing.JButton();
        subjectLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        popupMenu1.setLabel("popupMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        subjectComboBox.setFont(new java.awt.Font("Yu Gothic Light", 0, 18)); // NOI18N
        subjectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Practicum 1", "IT Project" }));
        subjectComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectComboBoxActionPerformed(evt);
            }
        });

        adviserLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        adviserLabel.setForeground(new java.awt.Color(51, 51, 51));
        adviserLabel.setText("Adviser:");

        adviserComboBox.setFont(new java.awt.Font("Yu Gothic Light", 0, 18)); // NOI18N
        adviserComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ma. Concepcion Clemente", "Cecilia Mercado", "Jonathan Ramirez", "Ria Andrea Nana", "Gerry Paul Genove", "Randy Domantay", "Bench Bacani", "Jo Montes", "Alodia Rei Leung", "Landley Bernardo" }));
        adviserComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adviserComboBoxActionPerformed(evt);
            }
        });

        classCodeLabel.setFont(new java.awt.Font("Yu Gothic", 0, 24)); // NOI18N
        classCodeLabel.setForeground(new java.awt.Color(51, 51, 51));
        classCodeLabel.setText("Class Code:");

        codeTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        codeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeTextFieldActionPerformed(evt);
            }
        });

        IDTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        IDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDTextFieldActionPerformed(evt);
            }
        });

        registerButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        registerButton.setText("Create account");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        IDLabel.setFont(new java.awt.Font("Yu Gothic", 0, 24)); // NOI18N
        IDLabel.setForeground(new java.awt.Color(51, 51, 51));
        IDLabel.setText("ID Number:");

        jPanel1.setBackground(new java.awt.Color(51, 51, 0));

        jLabel1.setFont(new java.awt.Font("Bebas", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Create   an    Account");
        jPanel1.add(jLabel1);

        instructions.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        instructions.setText("HELP");
        instructions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructionsActionPerformed(evt);
            }
        });

        RegisterID.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RegisterID.setText("Register ID Number");
        RegisterID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterIDActionPerformed(evt);
            }
        });

        subjectLabel.setFont(new java.awt.Font("Yu Gothic", 0, 24)); // NOI18N
        subjectLabel.setForeground(new java.awt.Color(51, 51, 51));
        subjectLabel.setText("Subject:");

        jLabel4.setFont(new java.awt.Font("Yu Gothic Light", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 0));
        jLabel4.setText("ID Number not yet Registered?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(subjectLabel)
                    .addComponent(IDLabel)
                    .addComponent(adviserLabel)
                    .addComponent(classCodeLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adviserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(RegisterID)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(instructions)
                        .addGap(79, 79, 79))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(registerButton)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(instructions)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RegisterID)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(subjectLabel)
                        .addGap(27, 27, 27)
                        .addComponent(IDLabel)
                        .addGap(27, 27, 27)
                        .addComponent(classCodeLabel)
                        .addGap(27, 27, 27)
                        .addComponent(adviserLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(IDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(codeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(adviserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addComponent(registerButton)
                .addGap(32, 32, 32))
        );

        subjectComboBox.setSelectedIndex(-1);
        adviserComboBox.setSelectedIndex(-1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subjectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectComboBoxActionPerformed

    private void adviserComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adviserComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adviserComboBoxActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        Connection con;
        Statement stmt;
        ResultSet rs;
        String query;
        try {
            String conStr = "jdbc:mysql://localhost:3306/scislog?user=root&password=";
            con = DriverManager.getConnection(conStr);

            if (!isFilledOut()) {
                JOptionPane.showMessageDialog(this, "Fill out all fields", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!idNumberExists(IDTextField.getText())) {
                JOptionPane.showMessageDialog(this, "ID Number is not yet Registered", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!codeValidator(codeTextField.getText())) {
                JOptionPane.showMessageDialog(this, "Enter a valid class code", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (IDIsExisting(IDTextField.getText(), subjectComboBox.getSelectedItem().toString())) {
                JOptionPane.showMessageDialog(this, "ID Number "+IDTextField.getText()+" is already registered"
                        + "\nin the subject "+subjectComboBox.getSelectedItem().toString()+".", "Error", JOptionPane.ERROR_MESSAGE);
                resetFields();
            } else {
                ConfirmPassword cp = new ConfirmPassword();
                cp.setVisible(true);
                dispose();
            }

        } catch (SQLException ex) {
            Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void instructionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_instructionsActionPerformed

    private void RegisterIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterIDActionPerformed
        IDRegistration regID = new IDRegistration();
        regID.setVisible(true);
    }//GEN-LAST:event_RegisterIDActionPerformed

    private void codeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeTextFieldActionPerformed

    private void IDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDTextFieldActionPerformed

    private Boolean idNumberExists(String idnumber) {
        boolean res = false;

        Connection con;
        Statement stmt;
        ResultSet rs;
        String query;

        try {
            String conStr = "jdbc:mysql://localhost:3306/scislog?user=root&password=";
            con = DriverManager.getConnection(conStr);
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            query = "SELECT idnumber from students where idnumber = " + idnumber;

            rs = stmt.executeQuery(query);
            if (rs.next()) {
                res = true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
        return res;
    }

    private Boolean idValidator(String id) {
        boolean flag = false;
        int digitCount = 0;

        for (int i = 0; i < id.length(); i++) {
            if (Character.isDigit(id.charAt(i))) {
                digitCount++;
            }
        }

        if (digitCount == 7 && id.charAt(0) == '2') {
            return true;
        }

        return flag;
    }

    private Boolean codeValidator(String code) {
        boolean flag = false;

        if (code.length() == 4 && code.charAt(0) == '9') {
            return true;
        }

        return flag;
    }

    private void resetFields() {
        IDTextField.setText("");
        subjectComboBox.setSelectedIndex(-1);
        codeTextField.setText("");
        adviserComboBox.setSelectedIndex(-1);
    }

    private Boolean isFilledOut() {
        boolean res = true;

        if (IDTextField.getText().equals("") || adviserComboBox.getSelectedItem().toString().equals("")
                || codeTextField.getText().equals("") || subjectComboBox.getSelectedItem().toString().equals("")) {
            res = false;
        }

        return res;
    }

    private Boolean IDIsExisting(String id, String subject) {
        boolean res = false;
        Connection con;
        PreparedStatement ps;
        ResultSet rs;
        String query;

        try {
            String conStr = "jdbc:mysql://localhost:3306/scislog?user=root&password=";
            con = DriverManager.getConnection(conStr);
            query = "SELECT * from `accounts` where `idnumber` = ? and `subject` = ?";
            
            ps = con.prepareStatement(query);
            ps.setString(1, id);
            ps.setString(2, subject);
            
            rs = ps.executeQuery();
            if (rs.next()) {
                res = true;
            }
            
            rs.close();
            ps.close();
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
        return res;
    }
    
    public void close() {
        Registration.this.dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IDLabel;
    protected static final javax.swing.JTextField IDTextField = new javax.swing.JTextField();
    private javax.swing.JButton RegisterID;
    protected static final javax.swing.JComboBox<String> adviserComboBox = new javax.swing.JComboBox<>();
    private javax.swing.JLabel adviserLabel;
    private javax.swing.JLabel classCodeLabel;
    protected static final javax.swing.JTextField codeTextField = new javax.swing.JTextField();
    private javax.swing.JButton instructions;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JButton registerButton;
    protected static final javax.swing.JComboBox<String> subjectComboBox = new javax.swing.JComboBox<>();
    private javax.swing.JLabel subjectLabel;
    // End of variables declaration//GEN-END:variables
}
