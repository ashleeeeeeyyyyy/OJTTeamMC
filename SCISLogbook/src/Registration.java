
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Earl
 */
public class Registration extends javax.swing.JFrame {

    /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subjectLabel = new javax.swing.JLabel();
        purposeComboBox = new javax.swing.JComboBox<>();
        adviserLabel = new javax.swing.JLabel();
        adviserComboBox = new javax.swing.JComboBox<>();
        classCodeLabel = new javax.swing.JLabel();
        codeTextField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        fNameTextField = new javax.swing.JTextField();
        fNameLabel = new javax.swing.JLabel();
        idNumberTextField = new javax.swing.JTextField();
        lNameLabel = new javax.swing.JLabel();
        lNameTextField = new javax.swing.JTextField();
        registerButton = new javax.swing.JButton();
        idNumberLabel1 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        courseYearLabel = new javax.swing.JLabel();
        courseYearTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        confirmPasswordLabel = new javax.swing.JLabel();
        confirmPasswordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        subjectLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        subjectLabel.setForeground(new java.awt.Color(51, 51, 51));
        subjectLabel.setText("Subject:");

        purposeComboBox.setFont(new java.awt.Font("Yu Gothic Light", 0, 18)); // NOI18N
        purposeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Practicum 1", "IT Project" }));
        purposeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purposeComboBoxActionPerformed(evt);
            }
        });

        adviserLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        adviserLabel.setForeground(new java.awt.Color(51, 51, 51));
        adviserLabel.setText("Adviser:");

        adviserComboBox.setFont(new java.awt.Font("Yu Gothic Light", 0, 18)); // NOI18N
        adviserComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ma. Concepcion Clemente", "Cecilia Mercado", "Jonathan Ramirez", "Ria Andrea Nana", "Gerry Paul Genove", "Randy Domantay", "Bench Bacani", "Jo Montes", "Alodia Rei Leung", "Landley Bernardo" }));
        adviserComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adviserComboBoxActionPerformed(evt);
            }
        });

        classCodeLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        classCodeLabel.setForeground(new java.awt.Color(51, 51, 51));
        classCodeLabel.setText("Class Code");

        passwordLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(51, 51, 51));
        passwordLabel.setText("Password");

        fNameLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        fNameLabel.setForeground(new java.awt.Color(51, 51, 51));
        fNameLabel.setText("First Name:");

        lNameLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        lNameLabel.setForeground(new java.awt.Color(51, 51, 51));
        lNameLabel.setText("Last Name:");

        registerButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        idNumberLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        idNumberLabel1.setForeground(new java.awt.Color(51, 51, 51));
        idNumberLabel1.setText("ID Number:");

        courseYearLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        courseYearLabel.setForeground(new java.awt.Color(51, 51, 51));
        courseYearLabel.setText("Course & Year");

        jPanel1.setBackground(new java.awt.Color(51, 51, 0));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 60)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Create an Account");
        jPanel1.add(jLabel1);

        confirmPasswordLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        confirmPasswordLabel.setForeground(new java.awt.Color(51, 51, 51));
        confirmPasswordLabel.setText("Confirm Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(courseYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(purposeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(courseYearLabel)
                                .addGap(54, 54, 54)
                                .addComponent(subjectLabel))
                            .addComponent(adviserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(adviserLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lNameLabel)
                                    .addComponent(fNameLabel))
                                .addGap(161, 161, 161)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idNumberLabel1)
                                    .addComponent(idNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(confirmPasswordLabel)
                                    .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(fNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(395, 395, 395)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(classCodeLabel)
                                    .addComponent(registerButton)
                                    .addComponent(codeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(fNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNameLabel)
                    .addComponent(idNumberLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(confirmPasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseYearLabel)
                    .addComponent(subjectLabel)
                    .addComponent(classCodeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(courseYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(purposeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(adviserLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adviserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(registerButton)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        purposeComboBox.setSelectedIndex(-1);
        adviserComboBox.setSelectedIndex(-1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void purposeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purposeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purposeComboBoxActionPerformed

    private void adviserComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adviserComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adviserComboBoxActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        Connection con;
        Statement stmt;
        ResultSet rs;
        String query;
        String proc;
        try {
            String conStr = "jdbc:mysql://localhost:3306/scislog?user=root&password=";
            con = DriverManager.getConnection(conStr);
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            if ("Practicum 1".equals(purposeComboBox.getSelectedItem().toString())) {
                query = "select * from student_practicum";
                proc = "regPracAccount";
                rs = stmt.executeQuery(query);

                if (passwordValidator(passwordField.getText())) {
                    registerAccount(Integer.parseInt(idNumberTextField.getText()), fNameTextField.getText(),
                            lNameTextField.getText(), courseYearTextField.getText(), purposeComboBox.getSelectedItem().toString(),
                            codeTextField.getText(), adviserComboBox.getSelectedItem().toString(), passwordField.getText(), query, proc, stmt, con);
                    JOptionPane.showMessageDialog(this, "Registration Complete!");
                    Registration.this.dispose();
                } else if (!passwordField.getText().equals(confirmPasswordField.getText())) {
                    JOptionPane.showMessageDialog(this, "Passwords do not match", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Password should contain:\n1. At least 8 characters\n2. Upper & Lowercase Letters\n3. At least one number", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if ("IT Project".equals(purposeComboBox.getSelectedItem().toString())) {

                query = "select * from student_itproject";
                proc = "regITProjAccount";
                rs = stmt.executeQuery(query);

                if (passwordValidator(passwordField.getText())) {
                    registerAccount(Integer.parseInt(idNumberTextField.getText()), fNameTextField.getText(),
                            lNameTextField.getText(), courseYearTextField.getText(), purposeComboBox.getSelectedItem().toString(),
                            codeTextField.getText(), adviserComboBox.getSelectedItem().toString(), passwordField.getText(), query, proc, stmt, con);
                    JOptionPane.showMessageDialog(this, "Registration Complete!");
                    Registration.this.dispose();
                } else if (!passwordField.getText().equals(confirmPasswordField.getText())) {
                    JOptionPane.showMessageDialog(this, "Passwords do not match", "Error", JOptionPane.ERROR_MESSAGE);
                    passwordField.setText("");
                    confirmPasswordField.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Password should contain:\n1. At least 8 characters\n2. Upper & Lowercase Letters\n3. At least one number", "Error", JOptionPane.ERROR_MESSAGE);
                    passwordField.setText("");
                    confirmPasswordField.setText("");
                }

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "ID Number " + idNumberTextField.getText() + " is already registered in the\n " + purposeComboBox.getSelectedItem().toString() + " accounts database.", "Error", JOptionPane.ERROR_MESSAGE);
            resetFields();
            Registration.this.dispose();
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private Boolean passwordValidator(String pass) {
        boolean flag = false;
        int upperCase = 0;
        int lowerCase = 0;
        int digitCount = 0;

        for (int i = 0; i < pass.length(); i++) {
            if (Character.isUpperCase(pass.charAt(i))) {
                upperCase++;
            }
            if (Character.isLowerCase(pass.charAt(i))) {
                lowerCase++;
            }
            if (Character.isDigit(pass.charAt(i))) {
                digitCount++;
            }
        }

        if (upperCase > 0 && lowerCase > 0 && digitCount > 0 && pass.length() > 8) {
            return true;
        }

        return flag;
    }

    private void resetFields() {
        idNumberTextField.setText("");
        fNameTextField.setText("");
        lNameTextField.setText("");
        courseYearTextField.setText("");
        purposeComboBox.setSelectedIndex(-1);
        codeTextField.setText("");
        adviserComboBox.setSelectedIndex(-1);
        passwordField.setText("");
    }

    private ResultSet registerAccount(int ID, String fName, String lName, String course_year, String subject, String code,
            String adviser, String password, String query, String proc, Statement stmt, Connection con) throws SQLException {
        CallableStatement callsp;
        ResultSet rs;
        rs = stmt.executeQuery(query);
        rs.beforeFirst();
        String callLog = "{call " + proc + "(?,?,?,?,?,?,?,?)}";
        callsp = con.prepareCall(callLog);
        callsp.setInt(1, ID);
        callsp.setString(2, fName);
        callsp.setString(3, lName);
        callsp.setString(4, course_year);
        callsp.setString(5, subject);
        callsp.setString(6, code);
        callsp.setString(7, adviser);
        callsp.setString(8, password);
        callsp.executeUpdate();
        return rs;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> adviserComboBox;
    private javax.swing.JLabel adviserLabel;
    private javax.swing.JLabel classCodeLabel;
    private javax.swing.JTextField codeTextField;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JLabel courseYearLabel;
    private javax.swing.JTextField courseYearTextField;
    private javax.swing.JLabel fNameLabel;
    private javax.swing.JTextField fNameTextField;
    private javax.swing.JLabel idNumberLabel1;
    private javax.swing.JTextField idNumberTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lNameLabel;
    private javax.swing.JTextField lNameTextField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JComboBox<String> purposeComboBox;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel subjectLabel;
    // End of variables declaration//GEN-END:variables
}
